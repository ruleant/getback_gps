// Example : http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Goals-of-the-new-Build-System

buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath 'com.vanniktech:gradle-android-javadoc-plugin:0.3.0'
        classpath 'de.mannodermaus.gradle.plugins:android-junit5:1.7.0.0'
    }
}

plugins {
    id 'jacoco'
    id('com.github.nbaztec.coveralls-jacoco') version '1.2.7'
}

apply plugin: 'com.android.application'
apply plugin: 'com.vanniktech.android.javadoc'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/java']
            resources.srcDirs = ['src/java']
            aidl.srcDirs = ['src/java']
            renderscript.srcDirs = ['src/java']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
    lintOptions {
            // if true, stop the gradle build if errors are found
            abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
    google()
    jcenter()
}

dependencies {
    implementation('de.keyboardsurfer.android.widget:crouton:1.8.1') {
        // exclusion is not necessary, but generally a good idea.
        exclude group: 'com.google.android', module: 'support-v4'
    }
    // android support libraries (android.support.*)
    implementation "androidx.legacy:legacy-support-core-utils:1.0.0"
}

// Unit tests

sourceSets {
    unitTest {
        java.srcDir file('src/test')
        resources.srcDir file('src/test/resources')
    }
}

dependencies {
    // (Required) Writing and executing Unit Tests on the JUnit Platform.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")

    // (Optional) If you need "Parameterized Tests".
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.0")

    // (Optional) If you also have JUnit 4-based tests
    testImplementation("junit:junit:4.13")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.0")

    testImplementation files("$project.buildDir/classes/debug")
    testImplementation 'org.mockito:mockito-core:3.7.7'
}

coverallsJacoco {
    reportPath = "build/reports/jacoco/jacocoTestReportRelease/jacocoTestReportRelease.xml"
}
